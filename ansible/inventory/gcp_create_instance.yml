- name: Create an instance
  hosts: localhost
  gather_facts: true
  vars:
      gcp_project: crafty-academy-289910
      gcp_cred_kind: serviceaccount
      gcp_cred_file: ~/.ssh/gcp.json
      zone: "europe-west3-a"
      region: "europe-west3"

  tasks:
   - name: create a first disk
     gcp_compute_disk:
         name: 'disk-test-1'
         size_gb: 10
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk1

   - name: create a second disk
     gcp_compute_disk:
         name: 'disk-test-2'
         size_gb: 10
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk2


   - name: create a first address
     gcp_compute_address:
         name: 'address-test-1'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address1

   - name: create a second address
     gcp_compute_address:
         name: 'address-test-2'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address2


   - name: create a first instance
     gcp_compute_instance:
         state: present
         name: test-1
         machine_type: n1-standard-1
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk1 }}"
         network_interfaces:
             - network: null # use default
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address1 }}"
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance1

   - name: create a second instance
     gcp_compute_instance:
         state: present
         name: test-2
         machine_type: n1-standard-1
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk2 }}"
         network_interfaces:
             - network: null # use default
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address2 }}"
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance2

   - name: Wait for SSH to come up {{ instance1.name }}
     wait_for: host={{ address1.address }} port=22 delay=10 timeout=60

   - name: Wait for SSH to come up {{ instance2.name }}
     wait_for: host={{ address2.address }} port=22 delay=10 timeout=60

   - name: Add host to groupname {{ instance1.name }}
     add_host: hostname={{ address1.address }} groupname=test

   - name: Add host to groupname {{ instance2.name }}
     add_host: hostname={{ address2.address }} groupname=test

- name: Manage new instances
  hosts: test
  connection: ssh
  become: True
  roles:
#     - role: '~/git/DevOpsSchool2020/ansible/inventory/roles/common'
     - role: 'common'
     - role: 'ftp'
     - role: 'nginx'
#    - base_configuration
#    - production_server
